name: Release Scoop

on:
  workflow_dispatch:

jobs:

  release-scoop:
    runs-on: [self-hosted, Windows]
    # runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true

      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
            minimum-size: 16GB
            maximum-size: 16GB
            disk-root: "C:"

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-ninja git
       # see here: https://gist.github.com/scivision/1de4fd6abea9ba6b2d87dc1e86b5d2ce
      
      # - name: Set Path
      #   run: |
      #     "C:\__\programs\TDM-GCC-64\bin" >> $env:GITHUB_PATH
      #     "D:/a/_temp/msys/msys64/mingw64/bin" >> $env:GITHUB_PATH

      #     # "C:\__\programs\TDM-GCC-64\libexec\gcc\x86_64-w64-mingw32\10.3.0" >> $env:GITHUB_PATH

      #     cat $env:GITHUB_PATH
      #     get-command cc1plus

      - name: Put MSYS2_MinGW64 on PATH
        # there is not yet an environment variable for this path from msys2/setup-msys2
        shell: msys2 {0}
        run: export PATH=D:/a/_temp/msys/msys64/mingw64/bin:$PATH

      - name: Build Sling (Windows)
        shell: msys2 {0}
        run: .\scripts\ci\build.win.ps1 "dev"

      # - name: Run GoReleaser
      #   # uses: flarco/goreleaser-action@master
      #   uses: goreleaser/goreleaser-action@v4
      #   with:
      #     distribution: goreleaser
      #     version: latest
      #     args: release --rm-dist --skip-validate -f .goreleaser.windows.yaml
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACE_ACCESS_KEY}}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACE_SECRET_KEY}}

