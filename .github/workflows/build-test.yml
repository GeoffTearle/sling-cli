name: Bump, Build & Test

on: 
  workflow_dispatch:
  repository_dispatch:
    types: [build-test]
  push:

jobs:
  bump:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    uses: ./.github/workflows/bumper.yml
    secrets: inherit
  
  build:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: [self-hosted, linux]
    needs: [bump]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Set up GoLang
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
          
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        env:
          # VERSION: ${{ steps.get_version.outputs.VERSION }}
          # VERSION: ${{ github.event.client_payload.version }}
          VERSION: ${{ needs.bump.outputs.new_version }}
          REF_NAME: ${{ github.ref_name }}
        
        run: |
          echo "VERSION -> $VERSION"
          echo "REF_NAME -> $REF_NAME"
          echo "TAG -> $(git describe --tags --abbrev=0)"

          bash scripts/prep.gomod.sh
          export WORK_FOLDER=/__/work/${GITHUB_RUN_NUMBER}
          mkdir -p $WORK_FOLDER
          cp -r . $WORK_FOLDER/sling

          docker run --rm -v /__/docker-data/devbox/root/go:/root/go -v /__:/__ -v /tmp:/tmp -v $WORK_FOLDER:/work --workdir /work/sling flarco/devbox:base bash scripts/build.linux.sh $VERSION
          rm -rf $WORK_FOLDER/sling

  test:
    if: "! (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[no test]'))"

    needs: [build]

    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v2

      - name: Set up GoLang
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
          
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Go Tests
        run: |
          docker run --rm -v /__/docker-data/devbox/root/go:/root/go -v /__:/__ -v /tmp:/tmp -v $PWD:/work --workdir /work flarco/devbox:base bash -c "bash scripts/prep.gomod.sh && source /__/devbox/.env.sh && _DEBUG='' bash scripts/test.sh"