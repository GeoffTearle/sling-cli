name: Build & Test

on: [push]

jobs:
  build:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: [self-hosted, linux]

    steps:
      - name: Wait for bumper
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: bump
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - uses: actions/checkout@v2
        
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          bash scripts/prep.gomod.sh
          export WORK_FOLDER=/__/work/${GITHUB_RUN_NUMBER}
          mkdir -p $WORK_FOLDER
          cp -r . $WORK_FOLDER/sling
          docker run --rm -e VERSION -v /__/docker-data/devbox/root/go:/root/go -v /__:/__ -v /tmp:/tmp -v $WORK_FOLDER:/work --workdir /work/sling flarco/devbox:base bash scripts/build.linux.sh
          rm -rf $WORK_FOLDER
          echo $VERSION

  test:
    if: "! (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[no test]'))"

    needs: [build]

    runs-on: [self-hosted, linux]

    steps:
      - uses: actions/checkout@v2

      - name: Run Go Tests
        run: |
          bash scripts/prep.gomod.sh
          source /root/.bashrc
          source /__/devbox/.env.sh
          export _DEBUG=''
          echo $PATH
          bash scripts/test.sh