n	test_name	source_conn	source_stream	source_options	target_conn	target_object	mode	source_primary_key	source_update_key	target_options	options	env
1	csv_full_refresh		file://tests/files/test1.csv	{}	[conn]	[schema].[table]	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true, ""pre_sql"" : ""{drop_view}"", ""table_keys"": { ""unique"": [ ""id"" ] }}"	{}	
2	discover_table				[conn]	[schema].[table]	discover					"{""validation_contains"": ""create_dt"", ""validation_row_count"": ""10""}"
3	csv_incremental		file://tests/files/test1.upsert.csv	{}	[conn]	[schema].[table]	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true, ""post_sql"" : ""{drop_view}""}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
4	parquet_snapshot		file://tests/files/test1.parquet	{}	[conn]	[schema].[table]_snapshot	snapshot			"{""pre_sql"" : ""create view [schema].[table]_vw as select * from [schema].[table]""}"		
5	parquet_truncate		file://tests/files/test1.parquet	"{""columns"": {""rating"": ""float""}}"	[conn]	[schema].[table]_truncate	truncate			"{""pre_sql"": ""drop table [schema].[table]_snapshot "", ""post_sql"" : ""drop table [schema].[table]_truncate""}"		
6	csv_wide_full_refresh		file://tests/files/test.wide.csv	{}	[conn]	[schema].[table]_wide	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": false, ""table_keys"": { ""unique"": [ ""id"" ] }}"	{}	
7	discover_schema				[conn]	[schema].*	discover					"{""validation_contains"": ""[table],[table]_wide,[table]_vw""}"
8	discover_filter				[conn]		discover					"{""filter"": ""[table]_v*"", ""validation_contains"": ""[table]_vw"", ""validation_row_count"": ""1""}"
9	table_full_refresh_into_postgres	[conn]	[schema].[table]	{}	postgres	public.[table]_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
10	table_incremental_into_postgres	[conn]	[schema].[table]	{}	postgres	public.[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
11	view_full_refresh_into_postgres	[conn]	[schema].[table]_vw	{}	postgres	public.[table]_pg_vw	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
12	sql_full_refresh_into_postgres	[conn]	select t1.*, {seq_num} as seq_num from [schema].[table] t1 where 1=1	{}	postgres	public.[table]_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6"", ""seq_num"": 123}"
13	sql_incremental_into_postgres	[conn]	select * from [schema].[table] where {incremental_where_cond}	{}	postgres	public.[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
14	table_backfill_into_postgres	[conn]	[schema].[table]	"{""range"":""2020-01-01,2021-01-01""}"	postgres	public.[table]_pg	backfill	id	create_dt	{}	{}	
15	table_full_refresh_from_postgres	postgres	public.[table]_pg	{}	[conn]	[schema].[table]_pg	full-refresh	id		"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
16	table_incremental_from_postgres	postgres	public.[table]_pg	{}	[conn]	[schema].[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": false}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
17	view_full_refresh_from_postgres	postgres	public.[table]_pg_vw	{}	[conn]	[schema].[table]_vw_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
18	sql_full_refresh_from_postgres	postgres	select * from public.[table]_pg where 1=1	{}	[conn]	[schema].[table]_pg	full-refresh	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
19	sql_incremental_from_postgres	postgres	select * from public.[table]_pg where {incremental_where_cond}	{}	[conn]	[schema].[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": false, ""post_sql"": ""{drop_view}""}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
20	table_backfill_from_postgres	postgres	public.[table]_pg	"{""range"":""2020-01-01,2021-01-01""}"	[conn]	[schema].[table]_pg	backfill	id	create_dt	"{""post_sql"": ""drop table [schema].[table] ; drop table [schema].[table]_pg; drop table [schema].[table]_vw_pg""}"	{}	
21	discover				[conn]		discover					
