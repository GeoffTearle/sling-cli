n	test_name	source_conn	source_stream	source_options	target_conn	target_object	mode	source_primary_key	source_update_key	target_options	options	env
1	csv_full_refresh		file://tests/files/test1.csv	{}	[conn]	[schema].[table]	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true, ""table_keys"": { ""unique"": [ ""id"" ] }}"	{}	
2	csv_incremental		file://tests/files/test1.upsert.csv	{}	[conn]	[schema].[table]	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true, ""post_sql"" : ""drop view if exists [schema].[table]_vw; create view [schema].[table]_vw as select * from [schema].[table]""}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
3	parquet_snapshot		file://tests/files/test1.parquet	{}	[conn]	[schema].[table]_snapshot	snapshot					
4	parquet_truncate		file://tests/files/test1.parquet	{}	[conn]	[schema].[table]_truncate	truncate			"{""pre_sql"": ""drop table [schema].[table]_snapshot "", ""post_sql"" : ""drop table [schema].[table]_truncate""}"		
5	csv_wide_full_refresh		file://tests/files/test.wide.csv	{}	[conn]	[schema].[table]_wide	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true, ""table_keys"": { ""unique"": [ ""id"" ] }}"	{}	
6	table_full_refresh_into_postgres	[conn]	[schema].[table]	{}	postgres	public.[table]_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
7	table_incremental_into_postgres	[conn]	[schema].[table]	{}	postgres	public.[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
8	view_full_refresh_into_postgres	[conn]	[schema].[table]_vw	{}	postgres	public.[table]_pg_vw	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
9	sql_full_refresh_into_postgres	[conn]	select *, {seq_num} as seq_num from [schema].[table] where 1=1	{}	postgres	public.[table]_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6"", ""seq_num"": 123}"
10	sql_incremental_into_postgres	[conn]	select * from [schema].[table] where {incremental_where_cond}	{}	postgres	public.[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
11	table_backfill_into_postgres	[conn]	[schema].[table]	"{""range"":""2020-01-01,2021-01-01""}"	postgres	public.[table]_pg	backfill	id	create_dt	{}	{}	
12	table_full_refresh_from_postgres	postgres	public.[table]_pg	{}	[conn]	[schema].[table]_pg	full-refresh	id		"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
13	table_incremental_from_postgres	postgres	public.[table]_pg	{}	[conn]	[schema].[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": false}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
14	view_full_refresh_from_postgres	postgres	public.[table]_pg_vw	{}	[conn]	[schema].[table]_vw_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	
15	sql_full_refresh_from_postgres	postgres	select * from public.[table]_pg where 1=1	{}	[conn]	[schema].[table]_pg	full-refresh			"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": true}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
16	sql_incremental_from_postgres	postgres	select * from public.[table]_pg where {incremental_where_cond}	{}	[conn]	[schema].[table]_pg	incremental	id	create_dt	"{""adjust_column_type"":true, ""add_new_columns"":true, ""use_bulk"": false}"	{}	"{""validation_file"": ""file://tests/files/test1.result.csv"", ""validation_cols"": ""0,1,2,3,4,6""}"
17	table_backfill_from_postgres	postgres	public.[table]_pg	"{""range"":""2020-01-01,2021-01-01""}"	[conn]	[schema].[table]_pg	backfill	id	create_dt	"{""post_sql"": ""drop view [schema].[table]_vw ; drop table [schema].[table] ; drop table [schema].[table]_pg""}"	{}	
